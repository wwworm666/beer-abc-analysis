#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∞–Ω–∞–º–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏
–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫—Ä–∞–Ω–æ–≤ –¥–ª—è –≤—Å–µ—Ö 4 –±–∞—Ä–æ–≤
"""

from core.taps_manager import TapsManager
from datetime import datetime, timedelta
import random

def generate_demo_data():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã"""

    # –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–æ—Ä—Ç–æ–≤ –ø–∏–≤–∞
    beers = [
        "–ì–∏–Ω–Ω–µ—Å—Å", "Heineken", "Stella Artois", "Corona",
        "Budweiser", "–ö–∏–ª–∏–∫–∏—è", "–ë–∞–ª—Ç–∏–∫–∞", "–ù–µ–≤—Å–∫–æ–µ",
        "–û–±–æ–ª–æ–Ω—å", "–ó–∞–∫—É—Å–∫–∞", "–ü–µ—Ä–∞–º–æ–≥–∞", "Hoegaarden",
        "Krombacher", "Carlsberg", "Tuborg", "Miller"
    ]

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
    manager = TapsManager()

    # –°–ª–æ–≤–∞—Ä—å —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∞—Ä–∞
    bars_config = [
        {'bar_id': 'bar1', 'name': '–ë–æ–ª—å—à–æ–π –ø—Ä. –í.–û', 'actions': 8},
        {'bar_id': 'bar2', 'name': '–õ–∏–≥–æ–≤—Å–∫–∏–π', 'actions': 6},
        {'bar_id': 'bar3', 'name': '–ö—Ä–µ–º–µ–Ω—á—É–≥—Å–∫–∞—è', 'actions': 7},
        {'bar_id': 'bar4', 'name': '–í–∞—Ä—à–∞–≤—Å–∫–∞—è', 'actions': 12},
    ]

    print("\n" + "="*60)
    print("–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ò–ï –î–ï–ú–û-–î–ê–ù–ù–´–• –î–õ–Ø –°–ò–°–¢–ï–ú–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–†–ê–ù–ê–ú–ò")
    print("="*60 + "\n")

    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∞—Ä–∞ —Å–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    for bar_config in bars_config:
        bar_id = bar_config['bar_id']
        bar_name = bar_config['name']
        action_count = bar_config['actions']

        print(f"üìç {bar_name} ({bar_id})")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π: {action_count}")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        for _ in range(action_count):
            tap_number = random.randint(1, manager.bars[bar_id].tap_count)
            beer = random.choice(beers)
            keg_id = f"KEG-{random.randint(1000, 9999)}"

            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
            action = random.choice(['start', 'replace'])

            if action == 'start':
                result = manager.start_tap(bar_id, tap_number, beer, keg_id)
                status = "‚úÖ" if result['success'] else "‚ùå"
                print(f"   {status} START - –ö—Ä–∞–Ω #{tap_number}: {beer}")

            elif action == 'replace':
                # –î–ª—è replace –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –∫—Ä–∞–Ω –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
                result = manager.replace_tap(bar_id, tap_number, beer, keg_id)
                status = "‚úÖ" if result['success'] else "‚ùå"
                print(f"   {status} REPLACE - –ö—Ä–∞–Ω #{tap_number}: {beer}")

        print()

    # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ stop –æ–ø–µ—Ä–∞—Ü–∏–π
    print("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫—Ä–∞–Ω–æ–≤...")
    for bar_id in ['bar1', 'bar2', 'bar3', 'bar4']:
        # –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –∫—Ä–∞–Ω—ã –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        stop_count = random.randint(1, 3)
        for _ in range(stop_count):
            tap_number = random.randint(1, manager.bars[bar_id].tap_count)
            result = manager.stop_tap(bar_id, tap_number)
            bar_name = manager.bars[bar_id].name
            status = "‚úÖ" if result['success'] else "‚ùå"
            if result['success']:
                print(f"   {status} STOP - {bar_name}, –ö—Ä–∞–Ω #{tap_number}")

    print("\n" + "="*60)
    print("–°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("="*60 + "\n")

    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = manager.get_statistics()

    print(f"üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –±–∞—Ä–æ–≤: {stats['total_bars']}")
    print(f"   –í—Å–µ–≥–æ –∫—Ä–∞–Ω–æ–≤: {stats['total_taps']}")
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫—Ä–∞–Ω–æ–≤: {stats['active_taps']}")
    print(f"   –ü—É—Å—Ç—ã—Ö –∫—Ä–∞–Ω–æ–≤: {stats['empty_taps']}")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {stats['active_percentage']}%")
    print(f"   –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {stats['total_events']}")

    print("\nüìà –ü–æ –±–∞—Ä–∞–º:\n")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –±–∞—Ä—É
    for bar_id in ['bar1', 'bar2', 'bar3', 'bar4']:
        bar_stats = manager.get_statistics(bar_id)
        bar_name = bar_stats['bar_name']

        print(f"   {bar_name}:")
        print(f"      –ê–∫—Ç–∏–≤–Ω—ã—Ö: {bar_stats['active_taps']}/{bar_stats['total_taps']} "
              f"({bar_stats['active_percentage']}%)")
        print(f"      –ü—É—Å—Ç—ã—Ö: {bar_stats['empty_taps']}")
        print(f"      –°–æ–±—ã—Ç–∏–π: {bar_stats['total_events']}")
        print()

    # –í—ã–≤–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
    print("="*60)
    print("–ü–û–°–õ–ï–î–ù–ò–ï 10 –°–û–ë–´–¢–ò–ô")
    print("="*60 + "\n")

    events = manager.get_all_events(limit=10)
    for i, event in enumerate(events, 1):
        action_emoji = {
            'start': '‚ñ∂',
            'stop': '‚èπ',
            'replace': 'üîÑ'
        }.get(event['action'], '‚Ä¢')

        print(f"{i:2}. {action_emoji} {event['action'].upper():7} "
              f"| {event['bar_name']:20} –ö—Ä–∞–Ω #{event['tap_number']:2} "
              f"| {event['beer_name']:20}")

    print("\n" + "="*60)
    print("‚úÖ –î–ï–ú–û-–î–ê–ù–ù–´–ï –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–´!")
    print("="*60)
    print("\n–¢–µ–ø–µ—Ä—å –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5000/taps –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("–∏ —É–≤–∏–¥–∏—Ç–µ –≤—Å–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.\n")

if __name__ == '__main__':
    generate_demo_data()
