import hashlib
import requests
from config import IIKO_BASE_URL, IIKO_LOGIN, IIKO_PASSWORD

class IikoAPI:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å iiko API"""
    
    def __init__(self):
        self.base_url = IIKO_BASE_URL
        self.login = IIKO_LOGIN
        self.password = IIKO_PASSWORD
        self.token = None
    
    def get_sha1_hash(self, text):
        """–ü–æ–ª—É—á–∏—Ç—å SHA-1 —Ö—ç—à –æ—Ç —Ç–µ–∫—Å—Ç–∞"""
        return hashlib.sha1(text.encode()).hexdigest()
    
    def authenticate(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
        password_hash = self.get_sha1_hash(self.password)
        
        url = f"{self.base_url}/auth"
        params = {
            "login": self.login,
            "pass": password_hash
        }
        
        print(f"[AUTH] Podklyuchaus k {self.base_url}...")

        try:
            response = requests.get(url, params=params)

            if response.status_code == 200:
                # –¢–æ–∫–µ–Ω –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ <string>—Ç–æ–∫–µ–Ω</string>
                self.token = response.text.strip().replace("<string>", "").replace("</string>", "")
                print(f"[OK] Uspeshno poluchen token: {self.token[:20]}...")
                return True
            else:
                print(f"[ERROR] Oshibka avtorizacii: {response.status_code}")
                print(f"   Otvet servera: {response.text}")
                return False

        except Exception as e:
            print(f"[ERROR] Oshibka podklyucheniya: {e}")
            return False
    
    def logout(self):
        """–û—Å–≤–æ–±–æ–¥–∏—Ç—å —Ç–æ–∫–µ–Ω (–æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Å–ª–æ—Ç –ª–∏—Ü–µ–Ω–∑–∏–∏)"""
        if not self.token:
            return
        
        url = f"{self.base_url}/logout"
        params = {"key": self.token}
        
        try:
            requests.get(url, params=params)
            print("[OK] Token osvobozhden")
        except:
            pass

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("üç∫ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ iiko API\n")
    
    api = IikoAPI()
    
    if api.authenticate():
        print("\nüéâ –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ú–æ–∂–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –ø–æ–ª—É—á–µ–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö.")
        api.logout()
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ config.py")