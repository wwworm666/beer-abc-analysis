"""–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –ø–∏–≤–∞"""
import json
import pandas as pd

print("=" * 60)
print("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–ê–ù–ù–´–• –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê –ö–ê–¢–ï–ì–û–†–ò–ô")
print("=" * 60)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
with open("beer_report.json", "r", encoding="utf-8") as f:
    data = json.load(f)

raw_data = data.get('data', [])
print(f"\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(raw_data)} –∑–∞–ø–∏—Å–µ–π –∏–∑ beer_report.json")

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å null/–ø—É—Å—Ç—ã–º DishGroup.ThirdParent
nulls = sum(1 for item in raw_data if item.get('DishGroup.ThirdParent') is None)
with_style = len(raw_data) - nulls

print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—é 'DishGroup.ThirdParent' (Style):")
print(f"   –° –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º Style: {with_style} ({with_style/len(raw_data)*100:.1f}%)")
print(f"   –° –ø—É—Å—Ç—ã–º Style:      {nulls} ({nulls/len(raw_data)*100:.1f}%)")

# –°–æ–∑–¥–∞–µ–º DataFrame
df = pd.DataFrame(raw_data)

# –°–º–æ—Ç—Ä–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ (–Ω–µ –ø—É—Å—Ç—ã–µ)
styles = df['DishGroup.ThirdParent'].dropna().unique()
print(f"\nüç∫ –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π: {len(styles)}")
print("\n–ü–µ—Ä–≤—ã–µ 10 —Å—Ç–∏–ª–µ–π:")
for i, style in enumerate(styles[:10], 1):
    count = len(df[df['DishGroup.ThirdParent'] == style])
    print(f"   {i}. {style} ({count} –∑–∞–ø–∏—Å–µ–π)")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –±–∞—Ä—É
bar_name = "–ë–æ–ª—å—à–æ–π –ø—Ä. –í.–û"
bar_data = df[df['Store.Name'] == bar_name]
print(f"\nüè™ –î–∞–Ω–Ω—ã–µ –¥–ª—è –±–∞—Ä–∞ '{bar_name}':")
print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(bar_data)}")

bar_styles = bar_data['DishGroup.ThirdParent'].dropna().unique()
print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π: {len(bar_styles)}")

bar_nulls = len(bar_data[bar_data['DishGroup.ThirdParent'].isna()])
print(f"   –° –ø—É—Å—Ç—ã–º Style: {bar_nulls} ({bar_nulls/len(bar_data)*100:.1f}%)")

# –ü—Ä–æ–±—É–µ–º –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤ data_processor.py
print(f"\nüîÑ –¢–µ—Å—Ç –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...")
agg_data = df.groupby(['Store.Name', 'DishName', 'DishGroup.ThirdParent', 'DishForeignName']).agg({
    'DishAmountInt': 'sum',
    'DishDiscountSumInt': 'sum',
    'ProductCostBase.ProductCost': 'sum',
    'ProductCostBase.MarkUp': 'mean',
}).reset_index()

agg_data.columns = ['Bar', 'Beer', 'Style', 'Country', 'TotalQty', 'TotalRevenue', 'TotalCost', 'AvgMarkupPercent']

print(f"   –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(agg_data)}")
print(f"   –ó–∞–ø–∏—Å–µ–π —Å –ø—É—Å—Ç—ã–º Style: {len(agg_data[agg_data['Style'].isna()])}")

# –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ CategoryAnalysis
print(f"\nüß™ –¢–µ—Å—Ç CategoryAnalysis.get_categories()...")
categories = agg_data['Style'].dropna().unique().tolist()
print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω–æ: {len(categories)}")

if len(categories) > 0:
    print(f"\n‚úÖ –î–ê–ù–ù–´–ï –ï–°–¢–¨! –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è.")
    print(f"\n–ü–µ—Ä–≤—ã–µ 5 –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
    for i, cat in enumerate(categories[:5], 1):
        cat_data = agg_data[agg_data['Style'] == cat]
        print(f"   {i}. {cat} ({len(cat_data)} —Ñ–∞—Å–æ–≤–æ–∫)")
else:
    print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ê! –ö–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ dropna()")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–∞—Ä–∞
bar_agg = agg_data[agg_data['Bar'] == bar_name]
bar_categories = bar_agg['Style'].dropna().unique().tolist()
print(f"\nüè™ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –±–∞—Ä–∞ '{bar_name}': {len(bar_categories)}")

if len(bar_categories) == 0:
    print(f"   ‚ùå –ü–†–û–ë–õ–ï–ú–ê! –î–ª—è –±–∞—Ä–∞ '{bar_name}' –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
    print(f"   –í—Å–µ–≥–æ —Ñ–∞—Å–æ–≤–æ–∫ –≤ –±–∞—Ä–µ: {len(bar_agg)}")
    print(f"   –° –ø—É—Å—Ç—ã–º Style: {len(bar_agg[bar_agg['Style'].isna()])}")
else:
    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(bar_categories)}")

print("\n" + "=" * 60)
print("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
print("=" * 60)
