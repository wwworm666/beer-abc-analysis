from datetime import datetime, timedelta
from olap_reports import OlapReports
import json

print("üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ë–ï–ó —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≥—Ä—É–ø–ø–µ\n")

olap = OlapReports()

if not olap.connect():
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
    exit()

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π (–º–µ–Ω—å—à–µ –ø–µ—Ä–∏–æ–¥)
date_to = datetime.now().strftime("%Y-%m-%d")
date_from = (datetime.now() - timedelta(days=7)).strftime("%Y-%m-%d")

# –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –ë–ï–ó —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –§–∞—Å–æ–≤–∫–∞
request = {
    "reportType": "SALES",
    "groupByRowFields": [
        "DishGroup.TopParent",  # –ì—Ä—É–ø–ø–∞ 1-–≥–æ —É—Ä–æ–≤–Ω—è - –ì–õ–ê–í–ù–û–ï!
        "DishName"              # –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
    ],
    "groupByColFields": [],
    "aggregateFields": [
        "DishAmountInt"  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
    ],
    "filters": {
        "OpenDate.Typed": {
            "filterType": "DateRange",
            "periodType": "CUSTOM",
            "from": date_from,
            "to": date_to
        },
        "DeletedWithWriteoff": {
            "filterType": "IncludeValues",
            "values": ["NOT_DELETED"]
        },
        "OrderDeleted": {
            "filterType": "IncludeValues",
            "values": ["NOT_DELETED"]
        }
    }
}

print(f"–ü–µ—Ä–∏–æ–¥: {date_from} - {date_to}\n")

import requests

url = f"{olap.api.base_url}/v2/reports/olap"
params = {"key": olap.token}
headers = {"Content-Type": "application/json"}

response = requests.post(url, params=params, json=request, headers=headers)

if response.status_code == 200:
    data = response.json()
    
    # –°–æ—Ö—Ä–∞–Ω–∏–º –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç
    with open("all_groups.json", "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
    
    print("‚úÖ –û—Ç—á–µ—Ç –ø–æ–ª—É—á–µ–Ω!")
    print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(data.get('data', []))}\n")
    
    # –°–æ–±–µ—Ä–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã 1-–≥–æ —É—Ä–æ–≤–Ω—è
    groups = set()
    for record in data.get('data', []):
        group = record.get('DishGroup.TopParent')
        if group:
            groups.add(group)
    
    print("üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ì–†–£–ü–ü–´ 1-–≥–æ –£–†–û–í–ù–Ø:")
    print("=" * 50)
    for group in sorted(groups):
        print(f"  - {group}")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∂–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–ø–∏—Å–µ–π
    print("\nüìù –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π (–ø–µ—Ä–≤—ã–µ 5):")
    for i, record in enumerate(data.get('data', [])[:5], 1):
        group = record.get('DishGroup.TopParent', 'N/A')
        dish = record.get('DishName', 'N/A')
        qty = record.get('DishAmountInt', 0)
        print(f"\n{i}. –ì—Ä—É–ø–ø–∞: {group}")
        print(f"   –ë–ª—é–¥–æ: {dish}")
        print(f"   –ö–æ–ª-–≤–æ: {qty}")
    
    print(f"\nüíæ –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: all_groups.json")
    
else:
    print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    print(response.text)

olap.disconnect()